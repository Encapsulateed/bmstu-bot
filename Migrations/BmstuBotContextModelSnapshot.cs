// <auto-generated />
using System;
using Microsoft.EntityFrameworkCore;
using Microsoft.EntityFrameworkCore.Infrastructure;
using Microsoft.EntityFrameworkCore.Storage.ValueConversion;
using Npgsql.EntityFrameworkCore.PostgreSQL.Metadata;
using bmstu_bot.Models;

#nullable disable

namespace bmstu_bot.Migrations
{
    [DbContext(typeof(BmstuBotContext))]
    partial class BmstuBotContextModelSnapshot : ModelSnapshot
    {
        protected override void BuildModel(ModelBuilder modelBuilder)
        {
#pragma warning disable 612, 618
            modelBuilder
                .HasAnnotation("ProductVersion", "7.0.12")
                .HasAnnotation("Relational:MaxIdentifierLength", 63);

            NpgsqlModelBuilderExtensions.UseIdentityByDefaultColumns(modelBuilder);

            modelBuilder.Entity("bmstu_bot.Models.Admin", b =>
                {
                    b.Property<long>("ChatId")
                        .HasColumnType("bigint")
                        .HasColumnName("chatId");

                    b.Property<string>("Link")
                        .HasMaxLength(255)
                        .HasColumnType("character varying(255)")
                        .HasColumnName("link");

                    b.HasKey("ChatId")
                        .HasName("Admins_pkey");

                    b.ToTable("Admins");
                });

            modelBuilder.Entity("bmstu_bot.Models.Complain", b =>
                {
                    b.Property<int>("Id")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("integer")
                        .HasColumnName("id");

                    NpgsqlPropertyBuilderExtensions.UseIdentityByDefaultColumn(b.Property<int>("Id"));

                    b.Property<string>("Admin")
                        .HasMaxLength(255)
                        .HasColumnType("character varying(255)")
                        .HasColumnName("admin");

                    b.Property<string>("Answer")
                        .HasColumnType("text")
                        .HasColumnName("answer");

                    b.Property<int>("Category")
                        .HasColumnType("integer")
                        .HasColumnName("category");

                    b.Property<DateTime?>("Date")
                        .HasColumnType("timestamp without time zone")
                        .HasColumnName("date");

                    b.Property<long>("From")
                        .HasColumnType("bigint")
                        .HasColumnName("from ");

                    b.Property<bool>("IsAnon")
                        .HasColumnType("boolean")
                        .HasColumnName("isAnon");

                    b.Property<string>("Message")
                        .HasColumnType("text")
                        .HasColumnName("message");

                    b.Property<int?>("Prev")
                        .HasColumnType("integer")
                        .HasColumnName("prev");

                    b.Property<int>("Type")
                        .HasColumnType("integer")
                        .HasColumnName("type");

                    b.HasKey("Id")
                        .HasName("Complains_pkey");

                    b.HasIndex("From");

                    b.ToTable("Complains");
                });

            modelBuilder.Entity("bmstu_bot.Models.Entry", b =>
                {
                    b.Property<int>("Id")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("integer")
                        .HasColumnName("id");

                    NpgsqlPropertyBuilderExtensions.UseIdentityByDefaultColumn(b.Property<int>("Id"));

                    b.Property<long>("AdminChat")
                        .HasColumnType("bigint")
                        .HasColumnName("adminChat");

                    b.Property<int>("ComplainId")
                        .HasColumnType("integer")
                        .HasColumnName("complainId");

                    b.Property<long>("MessageId")
                        .HasColumnType("bigint")
                        .HasColumnName("messageId");

                    b.HasKey("Id")
                        .HasName("Entries_pkey");

                    b.HasIndex("ComplainId");

                    b.ToTable("Entries");
                });

            modelBuilder.Entity("bmstu_bot.Models.User", b =>
                {
                    b.Property<long>("ChatId")
                        .HasColumnType("bigint")
                        .HasColumnName("chatId");

                    b.Property<bool?>("Anonim")
                        .HasColumnType("boolean")
                        .HasColumnName("anonim");

                    b.Property<string>("BmstuGroup")
                        .HasMaxLength(255)
                        .HasColumnType("character varying(255)")
                        .HasColumnName("bmstu_group ");

                    b.Property<string>("ComandLine")
                        .HasMaxLength(255)
                        .HasColumnType("character varying(255)");

                    b.Property<int>("ComplainCategory")
                        .HasColumnType("integer")
                        .HasColumnName("complain_category");

                    b.Property<int>("ComplainType")
                        .HasColumnType("integer")
                        .HasColumnName("complain_type");

                    b.Property<string>("Fio")
                        .HasMaxLength(255)
                        .HasColumnType("character varying(255)");

                    b.Property<string>("TgLink")
                        .HasMaxLength(255)
                        .HasColumnType("character varying(255)")
                        .HasColumnName("tgLink");

                    b.HasKey("ChatId")
                        .HasName("users_pkey");

                    b.ToTable("users", (string)null);
                });

            modelBuilder.Entity("bmstu_bot.Models.Complain", b =>
                {
                    b.HasOne("bmstu_bot.Models.User", "FromNavigation")
                        .WithMany("Complains")
                        .HasForeignKey("From")
                        .IsRequired()
                        .HasConstraintName("Complains_from _fkey");

                    b.Navigation("FromNavigation");
                });

            modelBuilder.Entity("bmstu_bot.Models.Entry", b =>
                {
                    b.HasOne("bmstu_bot.Models.Complain", "Complain")
                        .WithMany("Entries")
                        .HasForeignKey("ComplainId")
                        .IsRequired()
                        .HasConstraintName("Entries_complainId_fkey");

                    b.Navigation("Complain");
                });

            modelBuilder.Entity("bmstu_bot.Models.Complain", b =>
                {
                    b.Navigation("Entries");
                });

            modelBuilder.Entity("bmstu_bot.Models.User", b =>
                {
                    b.Navigation("Complains");
                });
#pragma warning restore 612, 618
        }
    }
}
